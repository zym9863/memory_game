name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # 当推送版本标签时触发，如 v1.0.0
  workflow_dispatch:  # 允许手动触发

permissions: write-all

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'
          
      - name: Get Flutter dependencies
        run: flutter pub get
        
      - name: Build Windows executable
        run: |
          flutter build windows --release
          echo "Build completed. Checking output directory structure:"
          dir build\windows\x64\runner\Release
        
      - name: Create Windows archive
        run: |
          $releaseDir = "build\windows\x64\runner\Release"
          $archivePath = "memory_game_windows.zip"
          if (Test-Path $releaseDir) {
            Compress-Archive -Path "$releaseDir\*" -DestinationPath $archivePath -Force
            Write-Host "Archive created: $archivePath"
            Get-ChildItem $archivePath
          } else {
            Write-Error "Release directory not found: $releaseDir"
            Get-ChildItem build -Recurse -Directory
            exit 1
          }
        shell: powershell
          
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: memory_game_windows.zip

  build-android:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'
          
      - name: Get Flutter dependencies
        run: flutter pub get
        
      - name: Build Android APK (split per ABI)
        run: flutter build apk --release --split-per-abi
        
      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: build/app/outputs/flutter-apk/*.apk

  create-release:
    needs: [build-windows, build-android]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-release
        continue-on-error: true
        id: download-windows
          
      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-release
        continue-on-error: true
        id: download-android
        
      - name: List downloaded files
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Windows download result: ${{ steps.download-windows.outcome }}"
          echo "Android download result: ${{ steps.download-android.outcome }}"
          
      - name: Get tag name
        id: tag
        run: |
          if [ "${{ github.ref_type }}" = "tag" ]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=dev-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
          fi
        
      - name: Prepare release files
        id: prepare-files
        run: |
          echo "Preparing files for release..."
          files_exist="false"
          if [ -f "memory_game_windows.zip" ]; then
            echo "✓ Windows build found"
            files_exist="true"
          else
            echo "⚠ Windows build not found"
          fi
          
          if ls *.apk 1> /dev/null 2>&1; then
            echo "✓ Android builds found:"
            ls -la *.apk
            files_exist="true"
          else
            echo "⚠ Android builds not found"
          fi
          
          echo "files_exist=$files_exist" >> $GITHUB_OUTPUT
        
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: steps.prepare-files.outputs.files_exist == 'true'
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          body: |
            ## 📱 Memory Game Release ${{ steps.tag.outputs.tag }}
            
            ### 🎮 Features
            - Flutter memory card game
            - Cross-platform support (Windows, Android)
            
            ### 📦 Downloads
            ${{ steps.download-windows.outcome == 'success' && '- **Windows**: Download `memory_game_windows.zip` and extract to run the game' || '- **Windows**: Build failed or not available' }}
            ${{ steps.download-android.outcome == 'success' && '- **Android**: Choose the appropriate APK for your device architecture:
              - `app-arm64-v8a-release.apk` - For most modern Android devices (64-bit ARM)
              - `app-armeabi-v7a-release.apk` - For older Android devices (32-bit ARM)
              - `app-x86_64-release.apk` - For Android x86_64 emulators/devices' || '- **Android**: Build failed or not available' }}
            
            ### 🚀 Installation
            
            **Windows:**
            1. Download `memory_game_windows.zip`
            2. Extract the archive
            3. Run `memory_game.exe`
            
            **Android:**
            1. Download the appropriate APK for your device
            2. Enable "Install from unknown sources" in your device settings
            3. Install the APK
            
            ---
            *Built with Flutter 💙*
          draft: false
          prerelease: ${{ github.ref_type != 'tag' }}
          files: |
            memory_game_windows.zip
            *.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
